# TODO: move into the custom folder and rename to "tools config"?
version: 2

defaults: &defaults
  enabled: false

configs:
  markdownlint:
    <<: *defaults
    lsp_feature: diagnostic
    language_id: markdown
    command: markdownlint --stdin
    parsing:
      formats:
        - "stdin:{line:d}:{col:d} {msg}"
        - "stdin:{line:d} {msg}"
        - "stdin {msg}"

  jqlint:
    <<: *defaults
    lsp_feature: diagnostic
    language_id: json
    command: "jq ."
    parsing:
      formats:
        - "{msg} at line {line:d}, column {col:d}"

  mypy:
    <<: *defaults
    lsp_feature: diagnostic
    language_id: python
    # NB: `--follow-imports=silent` means that Mypy _does_ check the entire codebase, but _doesn't_ output
    # errors outside the current file.
    # TODO: Look into https://mypy.readthedocs.io/en/stable/command_line.html#cmdoption-mypy-shadow-file
    # That will allow buffer updates rather than just on-disk changes to trigger diagnostics
    command: |
      mypy \
        --no-color-output \
        --no-error-summary \
        --follow-imports=silent \
        {file}
    piped: false
    stdout: true
    timeout: 15
    parsing:
      formats:
        - "{}:{line:d}: {severity}: {msg}"
        - "{}: {severity}: {msg}"

  black:
    <<: *defaults
    lsp_feature: formatter
    language_id: python
    # TODO: look into adding a `black` diagnostic tool
    # Because it turns out black reports parseable diagnostic lines when it can't parse a file!
    command: "black -"

  flake8:
    <<: *defaults
    lsp_feature: diagnostic
    language_id: python
    command: "flake8 --color never -"
    stdout: true
    parsing:
      formats:
        - "{}:{line:d}:{char:d}: {msg}"

  fuzzy_buffer_tokens:
    <<: *defaults
    lsp_feature: completion
    language_id: markdown
    # TODO: Include this in main docs:
    #   `{cursor_line}` and `{cursor_row}` should also be available
    command: "tr -cs '[:alnum:]' '\n' | fzf --filter='{word}' | uniq"
